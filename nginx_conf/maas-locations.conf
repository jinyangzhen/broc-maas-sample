location / {
  try_files $uri @gateway;
}

location = / {

  #adding ssi to root url
  ssi on;

  proxy_pass http://gateway;
  proxy_set_header Host $http_host;
  expires -1;
}

location @gateway {
  proxy_pass http://gateway;
  proxy_set_header Host $http_host;
  expires -1;
}

location ~ personalization/person/me$ {
  proxy_pass http://gateway;
  proxy_set_header Host $http_host;
  expires -1;
  add_header "accept-language"  $http_accept_language;
}

location ~ ^/[vV]\d+/rest {
  rewrite ^/[vV]\d+(.*) $1 break;
  proxy_pass http://gateway;
  proxy_set_header Host $http_host;
  expires -1;
}



location ~ ^/rest/\w*/?remoting {
  gzip off;
  proxy_pass http://gateway;
  proxy_set_header Host $http_host;
  client_max_body_size 5M;
  proxy_read_timeout 1800s;
}

location ~ ^/rest/?(?:frs) {
   #turn off gzip for file calls so it will not gzip attachments.
   gzip off;
   proxy_pass http://gateway;
   proxy_set_header Host $http_host;
   client_max_body_size 100M;
   proxy_read_timeout 300s;
}
location ~ ^/rest/\w*/frs {
  if ($http_cookie ~ "TENANTID=") {
    rewrite ^/rest/\w*/frs(.*)$ /rest/frs$1 last;
    break;
  }

  #turn off gzip for file calls so it will not gzip attachments.
  gzip off;
  proxy_pass http://gateway;
  proxy_set_header Host $http_host;
  client_max_body_size 100M;
  proxy_read_timeout 300s;
}

#split frs and articles upload rule for quick & dirty url rewrite for the frs
location ~ ^/rest/\w*/?(?:ess/articles/upload) {
  #turn off gzip for file calls so it will not gzip attachments.
  gzip off;
  proxy_pass http://gateway;
  proxy_set_header Host $http_host;
  client_max_body_size 100M;
  proxy_read_timeout 300s;
}

#split frs and scalable-data-import upload rule for quick & dirty url rewrite for the frs
location ~ ^/rest/\w*/?(?:ess/scalable-data-import/upload) {
  #turn off gzip for file calls so it will not gzip attachments.
  gzip off;
  proxy_pass http://gateway;
  proxy_set_header Host $http_host;
  client_max_body_size 10M;
  proxy_read_timeout 300s;
}


#split frs and fixed-asset upload rule for quick & dirty url rewrite for the frs
location ~ ^/rest/\w*/?(?:ess/fixed-asset/upload) {
  #turn off gzip for file calls so it will not gzip attachments.
  gzip off;
  proxy_pass http://gateway;
  proxy_set_header Host $http_host;
  client_max_body_size 10M;
  proxy_read_timeout 300s;
}


location ~ ^/rest/.*(metadata/ui/(entity-descriptors|enumeration-descriptors|logical-type-descriptors)|l10n/bundles|authorization/permissions|workflow|forms) {
  proxy_pass http://gateway;
  proxy_set_header Host $http_host;
  # an attempt to solve this bug: https://bugzilla.mozilla.org/show_bug.cgi?id=706806 on firefox and explorer
  if ($http_user_agent !~* "Chrome/.*"){
    expires    -1;
  }
  
}

# This definition was added for caching the response returned from this request /rest/ess/similarPastChanges 
# for the feature Similar Past Changes (developed by Tali Alsaigh Cohen)
location ~ ^/rest/ess/similarPastChanges {
  proxy_pass http://gateway;
  proxy_set_header Host $http_host;
}

# This definition was added for caching the response returned from this request /rest/ess/changeManagementSettings 
# for the feature Change Management Settings (developed by Neta-Lee Roberman)
location ~ ^/rest/ess/changeManagementSettings {
  proxy_pass http://gateway;
  proxy_set_header Host $http_host;
}


#adding white list urls which the SSI will work with
location ~ ^/(saw|sap|admin|home) {
  ssi on;
  proxy_pass http://gateway;
  proxy_set_header Host $http_host;
}

location ~ ^/(dashboard|reports|main) {
  ssi on;
  proxy_pass http://gateway;
  proxy_set_header Host $http_host;
}


location ~ ^/(?:rest|auth) {
  proxy_pass http://gateway;
  proxy_set_header Host $http_host;
  expires -1;
}

location /http-bind {
  proxy_pass http://xmpp;
  proxy_set_header Host $http_host;
  proxy_set_header X-UI-PORT $server_port;
  proxy_read_timeout 400;
  proxy_buffering off;
  tcp_nodelay on;
  keepalive_timeout 55;
}

location ^~ /devcss/ {
	proxy_pass http://127.0.0.1:4200/;
	break;
}

location ^~ /resources/css/theme.css {
	proxy_pass http://127.0.0.1:4200/resources/css/theme.css;
	break;
}

location ~ ^/help {


}

location ~ ^/[vV]\d+/help {

  try_files $uri @gateway;
}

location  = /help {
  rewrite ^/help  /help/en/full/ServiceAnywhere.htm permanent;
}





